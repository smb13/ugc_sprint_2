---
version : '3.9'


services:
  external_dev:  # External API for development
    extends:
      file: docker-compose.yml
      service: external
    build:
      context: ./external
      args:
        REQUIREMENTS_DEV: true
    depends_on:
      elastic:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DEBUG: true
    ports:
    -   8888:8000
    volumes:
    -   ./external/src:/src
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    profiles: [external_dev, tests]

  auth_dev:  # auth API for development
    extends:
      file: docker-compose.yml
      service: auth
    build:
      context: ./auth
      args:
        REQUIREMENTS_DEV: true
    environment:
      DEBUG: true
      FORWARDED_ALLOW_IPS: '*'
    depends_on:
      redis_auth:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
    -   8000:8000
    volumes:
    -   ./auth/src:/src
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    profiles: [auth_dev]

  tests:
    build:
      context: ./tests/functional
    env_file:
    -   .env
    depends_on:
    -   external_dev
    command: bash -c "pytest"
    profiles: [tests]

  admin_dev:  # Admin for development
    extends:
      file: docker-compose.yml
      service: admin
    build:
      context: ./admin
      dockerfile: ./Dockerfile
      args:
        REQUIREMENTS_DEV: true
    environment:
      DEBUG: true
      SERVICE_AUTH_API_BASE_PATH: http://auth_dev:8000/api/v1
    ports:
    -   8080:8000    # Торчит наружу только при запущенном dev-сервере, на проде торчать не будет
    volumes:
    -   ./admin:/src/app
    -   admin_data:/src/app/data
    command: sh -c "python ./manage.py migrate && python ./manage.py runserver 0.0.0.0:8000"
    profiles: [admin_dev]

  etl:
    extends:
      file: docker-compose.yml
      service: etl
    depends_on:
      postgres:
        condition: service_healthy
      elastic:
        condition: service_healthy
      redis:
        condition: service_healthy
    profiles: [etl]

  postgres:
    extends:
      file: docker-compose.yml
      service: postgres
    ports:
    -   5432:5432
    profiles: [etl, admin_dev, auth_dev]

  elastic:
    extends:
      file: docker-compose.yml
      service: elastic
    profiles: [etl, external_dev, tests]

  redis:
    extends:
      file: docker-compose.yml
      service: redis
    profiles: [etl, external_dev, tests]

  redis_auth:
    extends:
      file: docker-compose.yml
      service: redis_auth
    profiles: [auth_dev]

  jaeger:
    extends:
      file: docker-compose.yml
      service: jaeger
    profiles: [auth_dev, external_dev, tests]

  mongocfg1:
    container_name: mongocfg1
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster/config1:/data/db

  mongors1n1:
    container_name: mongors1n1
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /tmp/mongo_cluster/data1:/data/db

  mongos1:
    container_name: mongos1
    image: mongo
    depends_on:
      - mongocfg1
    command: mongos --configdb mongors1conf/mongocfg1:27017 --port 27017 --bind_ip_all
    ports:
      - 27017:27017
    expose:
      - "27017"
    volumes:
      - /etc/localtime:/etc/localtime:ro


volumes :
  postgres_db:
  esdata:
  redis_data:
  admin_data:
