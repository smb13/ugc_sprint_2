"""Init first migration

Revision ID: d93e5a53c0e6
Revises:
Create Date: 2024-01-24 02:36:46.617457

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "d93e5a53c0e6"
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "roles",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("code", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name="roles_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("login", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("password", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("first_name", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column("last_name", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="users_pkey"),
        sa.UniqueConstraint("login", name="users_login_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "refresh_tokens",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("jwt_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("expires_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="refresh_tokens_user_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="refresh_tokens_pkey"),
    )
    op.create_index("ix_refresh_tokens_jwt_id", "refresh_tokens", ["jwt_id"], unique=True)
    op.create_table(
        "role_bindings",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("role_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["role_id"], ["roles.id"], name="role_bindings_role_id_fkey"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="role_bindings_user_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="role_bindings_pkey"),
        sa.UniqueConstraint("user_id", "role_id", name="_user_role_uc"),
    )
    op.create_table(
        "access_log",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("ip_address", sa.VARCHAR(length=50), autoincrement=False, nullable=False),
        sa.Column("user_agent", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("origin", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("created", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="access_log_user_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="access_log_pkey"),
    )
    op.create_table(
        "permissions",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("role_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "action",
            postgresql.ENUM(
                "user_create",
                "user_read",
                "user_update",
                "user_delete",
                "role_create",
                "role_read",
                "role_update",
                "role_delete",
                "role_permission_create",
                "role_permission_read",
                "role_permission_update",
                "role_permission_delete",
                "role_binding_create",
                "role_binding_read",
                "role_binding_update",
                "role_binding_delete",
                "me_register",
                "me_read",
                "me_update",
                "me_delete",
                "me_change_password",
                "me_change_login",
                "me_access_log",
                name="actionenum",
            ),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["role_id"], ["roles.id"], name="permissions_role_id_fkey", ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id", name="permissions_pkey"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("permissions")
    op.drop_table("access_log")
    op.drop_table("role_bindings")
    op.drop_table("users")
    op.drop_index("ix_refresh_tokens_jwt_id", table_name="refresh_tokens")
    op.drop_table("refresh_tokens")
    op.drop_table("roles")
    # ### end Alembic commands ###
