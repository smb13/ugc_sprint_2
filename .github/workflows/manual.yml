---
name: Manual CI

on  :
  workflow_dispatch:
    # branches:
    # -   main

jobs:
  lint-and-type-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    -   uses: actions/checkout@v3

    -   name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
    -   name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mypy flake8-html
    -   name: Run flake8 linter
        run: |
          flake8 . --config=./tox.ini --format=html --htmldir=flake-report
        continue-on-error: true
    -   name: Run mypy (Type check)
        run: |
          mypy --config-file=pyproject.toml .
        continue-on-error: true

  tests:
    if: success() || failure()
    needs: lint-and-type-check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
    -   uses: actions/checkout@v3

    -   name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

    -   name: Make .env file
        run: |
          cd movies
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} > .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo POSTGRES_MOVIES_DB=${{ secrets.POSTGRES_MOVIES_DB }} >> .env
          echo POSTGRES_AUTH_DB=${{ secrets.POSTGRES_AUTH_DB }} >> .env
          echo POSTGRES_PORT=${{ secrets.POSTGRES_PORT }} >> .env
          echo REDIS_PORT=${{ secrets.REDIS_PORT }} >> .env
          echo REDIS_PORT_AUTH=${{ secrets.REDIS_PORT_AUTH }} >> .env
          echo REDIS_STATES_DB=${{ secrets.REDIS_STATES_DB }} >> .env
          echo DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }} >> .env
          echo LOCAL_USER=${{ secrets.LOCAL_USER }} >> .env
          echo LOCAL_USER_EMAIL=${{ secrets.LOCAL_USER_EMAIL }} >> .env
          echo LOCAL_USER_PASSWORD=${{ secrets.LOCAL_USER_PASSWORD }} >> .env
          echo JWT_ACCESS_TOKEN_EXPIRES_MINUTES=${{ secrets.JWT_ACCESS_TOKEN_EXPIRES_MINUTES }} >> .env
          echo JWT_ACCESS_TOKEN_SECRET_KEY=${{ secrets.JWT_ACCESS_TOKEN_SECRET_KEY }} >> .env
          echo JWT_REFRESH_TOKEN_SECRET_KEY=${{ secrets.JWT_REFRESH_TOKEN_SECRET_KEY }} >> .env

    -   name: Run tests
        run: |
          cd movies
          make first_start_tests

  notify:
    if: success()
    needs: [lint-and-type-check, tests]
    runs-on: ubuntu-latest
    steps:
    -   uses: actions/checkout@v2

    -   name: Send success notification to Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: 'CI Pipeline Success: ${{ github.repository }} at ${{ github.sha }}'
