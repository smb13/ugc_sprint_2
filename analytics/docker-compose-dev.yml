---
version : '3.9'

services:
  kafka:
    image: bitnami/kafka:3.6
    ports:
    -   "9094:9094"
    environment:
      # KRaft settings
    -   KAFKA_CFG_NODE_ID=0
    -   KAFKA_CFG_PROCESS_ROLES=controller,broker
    -   KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
    -   KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      # Listeners
    -   KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
    -   KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://kafka:9094
    -   KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    -   KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    -   KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      # Clustering
    -   KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    -   KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
    -   KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
    healthcheck:
      test: [CMD-SHELL, kafka-topics.sh --bootstrap-server localhost:9094 --topic hc --create --if-not-exists && kafka-topics.sh --bootstrap-server localhost:9094
            --topic hc --describe]
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    volumes:
    -   kafka_data:/bitnami/kafka


  ui:
    image: provectuslabs/kafka-ui:v0.7.0
    ports:
    -   "8080:8080"
    environment:
    -   KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=$KAFKA_CONNECTION_STRING
    -   KAFKA_CLUSTERS_0_NAME=kraft


  analytics:
    build: .
    env_file: ./.env
    ports:
    -   "8000:8000"
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test: [CMD-SHELL, curl -sS http://127.0.0.1:8000/health_check/v1 || exit 1]
      interval: 10s
      timeout: 5s
      retries: 5


volumes :
  kafka_data:
